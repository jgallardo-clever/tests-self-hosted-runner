# Script r√°pido para probar la compilaci√≥n en Windows Server 2022
# Utiliza MSBuild disponible en PATH

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "  Test Build - Calculadora Web" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Cambiar al directorio del script
Set-Location $PSScriptRoot

# Verificar que el proyecto existe
$projectPath = "calculadora-web\CalculadoraWeb.csproj"
if (!(Test-Path $projectPath)) {
    Write-Error "‚ùå Proyecto no encontrado: $projectPath"
    Write-Error "Ejecuta este script desde el directorio ra√≠z del repositorio"
    exit 1
}

Write-Host "‚úÖ Proyecto encontrado: $projectPath" -ForegroundColor Green
Write-Host ""

# Limpiar build anterior
Write-Host "üßπ Limpiando build anterior..." -ForegroundColor Yellow
if (Test-Path "calculadora-web\bin") {
    Remove-Item "calculadora-web\bin" -Recurse -Force
    Write-Host "   Directorio bin limpiado" -ForegroundColor Gray
}
if (Test-Path "calculadora-web\obj") {
    Remove-Item "calculadora-web\obj" -Recurse -Force
    Write-Host "   Directorio obj limpiado" -ForegroundColor Gray
}

Write-Host ""

# Test Debug build
Write-Host "üî® Compilando en modo Debug..." -ForegroundColor Yellow
$debugResult = & msbuild $projectPath /p:Configuration=Debug /p:Platform="Any CPU" /verbosity:minimal /nologo

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Build Debug: EXITOSO" -ForegroundColor Green
    
    # Verificar DLL generada
    if (Test-Path "calculadora-web\bin\CalculadoraWeb.dll") {
        $dllSize = (Get-Item "calculadora-web\bin\CalculadoraWeb.dll").Length
        Write-Host "   üì¶ DLL generada: $dllSize bytes" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå Build Debug: FALL√ì" -ForegroundColor Red
    exit 1
}

Write-Host ""

# Test Release build
Write-Host "üî® Compilando en modo Release..." -ForegroundColor Yellow
$releaseResult = & msbuild $projectPath /p:Configuration=Release /p:Platform="Any CPU" /verbosity:minimal /nologo

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Build Release: EXITOSO" -ForegroundColor Green
    
    # Verificar DLL generada
    if (Test-Path "calculadora-web\bin\CalculadoraWeb.dll") {
        $dllSize = (Get-Item "calculadora-web\bin\CalculadoraWeb.dll").Length
        Write-Host "   üì¶ DLL generada: $dllSize bytes" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå Build Release: FALL√ì" -ForegroundColor Red
    exit 1
}

Write-Host ""

# Mostrar informaci√≥n del build
Write-Host "üìã Informaci√≥n del build:" -ForegroundColor White
Write-Host "   ‚Ä¢ MSBuild version: $(& msbuild -version 2>$null | Select-Object -Last 1)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Target Framework: .NET Framework 4.8" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Configuraci√≥n: Debug y Release" -ForegroundColor Gray

# Listar archivos generados
Write-Host ""
Write-Host "üìÅ Archivos generados en bin:" -ForegroundColor White
if (Test-Path "calculadora-web\bin") {
    Get-ChildItem "calculadora-web\bin" | ForEach-Object {
        $size = if ($_.PSIsContainer) { "[DIR]" } else { "$($_.Length) bytes" }
        Write-Host "   $($_.Name) - $size" -ForegroundColor Gray
    }
} else {
    Write-Host "   ‚ùå Directorio bin no encontrado" -ForegroundColor Red
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Green
Write-Host "     ‚úÖ TEST BUILD COMPLETADO" -ForegroundColor Green
Write-Host "========================================" -ForegroundColor Green
Write-Host ""
Write-Host "üöÄ Para desplegar en IIS ejecuta:" -ForegroundColor White
Write-Host "   .\deploy-calculadora.ps1" -ForegroundColor Cyan
Write-Host "   .\deploy-calculadora.ps1 -ConfigureIIS" -ForegroundColor Cyan
Write-Host ""
